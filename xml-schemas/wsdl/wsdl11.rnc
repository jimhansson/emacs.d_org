#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2005-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# RELAX NG Schema for WSDL 1.1
#
#                   Written by Kohsuke Kawaguchi
#
# This schema is in public domain. Feel free to use it in anyway you can.
# If you find a bug, please let me know.
default namespace wsdl = "http://schemas.xmlsoap.org/wsdl/"
namespace local = ""
namespace txw = "http://java.sun.com/txw"

start = definitions

documentation = element documentation {
		mixed {
			otherElement*
		},
		attribute * {text}*
	}

[txw:mode="inherit"]
documented = documentation?

[txw:mode="inherit"]
openAtts = documented, attribute * - local:* {text}*

definitions = element definitions {
		documented,
		import*,
		types*,
		message*,
		portType*,
		binding*,
		service*,
		otherElement*,
		attribute targetNamespace {xsd:anyURI}?,
		attribute name {xsd:NMTOKEN}?
	}

import = element import {
	documented,
	attribute namespace {xsd:anyURI},
	attribute location {xsd:anyURI}
}

types = element types {
	documented,
	otherElement*
}

message = element message {
	documented,
	part*,
	attribute name {xsd:NMTOKEN}
}

part = element part {
	openAtts,
	attribute name {xsd:NMTOKEN},
	( attribute type {xsd:QName} | attribute element {xsd:QName} )
}

portType = element portType {
	documented,
	operation*,
	attribute name {xsd:NCName}
}

operation = element operation {
	documented,
	attribute name {xsd:NCName},
	
	(
		element one-way-operation {
			input
		} |
		element request-response-operation {
			input, output, fault*
		} |
		element solicit-response-operation {
			output, input, fault*
		} |
		element notification-operation {
			output
		}
	)
}

input = element input { paramType }
output = element output { paramType }
fault = element fault { faultType }

[txw:mode="inherit"]
paramType =
	documented,
	attribute name {xsd:NMTOKEN}?,
	attribute message {xsd:QName}

[txw:mode="inherit"]
faultType =
	documented,
	attribute name {xsd:NMTOKEN},
	attribute message {xsd:QName}

[txw:mode="inherit"]
startWithExtensionsType =
	documented,
	otherElement*

binding = element binding {
	startWithExtensionsType,
	element operation { binding_operationType }*,
	attribute name {xsd:NCName},
	attribute type {xsd:QName}
}

binding_operationType =
	attribute name {xsd:NCName},
	startWithExtensionsType,
	element input {startWithExtensionsType}?,
	element output {startWithExtensionsType}?,
	element fault {
		attribute name {xsd:NMTOKEN},
		startWithExtensionsType
	}*

service = element service {
	attribute name {xsd:NCName},
	documented,
	port*
}

port = element port {
	attribute name {xsd:NCName},
	attribute binding {xsd:QName},
	attribute arrayType {text}?,
	documented,
	otherElement?
}

otherElement = element * - wsdl:* {
	mixed {
		anyElement*
	},
	attribute * {text}*
}

anyElement = element * {
	mixed {
		anyElement*
	},
	attribute * {text}*
 }
